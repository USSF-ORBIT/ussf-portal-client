name: Node CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3

      - name: Read Node.js version from package.json
        run: echo ::set-output name=nodeVersion::$(node -p "require('./package.json').engines.node")
        id: engines

      - name: Set up node
        uses: actions/setup-node@eeb10cff27034e7acf239c5d29f62154018672fd # tag=v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09 # tag=v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # The yarn cache is not node_modules
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Generate GraphQL types
        run: yarn generate

      - name: Lint code
        run: yarn lint --ignore-pattern e2e/

      - name: Run Jest tests
        run: yarn test --coverage --silent

      - name: Build Storybook
        run: yarn storybook --ci --smoke-test
