name: Docker Build Main Push C1 Artifactory

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push-dev-c1:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

      - run: |
          sudo sh scripts/add-dod-cas.sh

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.C1_REGISTRY }}/${{ secrets.C1_REPOSITORY }}
          tags: |
            type=sha,prefix=,format=long
          flavor: |
            latest=false

      - uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2
        id: buildx
        with:
          config-inline: |
            [registry."${{ secrets.C1_REGISTRY }}"]
              ca=["/etc/ssl/certs/adoptium/cacerts"]
              http = false
              insecure = true

      - name: Rename certs
        id: certs
        env:
          DEV_CERT: ${{ secrets.SAML_CERT }}
          TEST_CERT: ${{ secrets.C1_TEST_SAML_CERT }}
          PROD_CERT: ${{ secrets.C1_PROD_SAML_CERT }}
        run: |
          echo $DEV_CERT > dev-saml.pem
          echo $TEST_CERT > test-saml.pem
          echo $PROD_CERT > prod-saml.pem

      - name: Build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          context: .
          push: false
          load: true
          tags: ${{ secrets.C1_REGISTRY}}/${{ secrets.C1_REPOSITORY }}:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD=${{ github.sha }}

      - name: Login to Dev Artifactory Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2
        with:
          registry: ${{ secrets.C1_REGISTRY }}
          username: ${{ secrets.C1_ART_USERNAME }}
          password: ${{ secrets.C1_ARTIFACTORY_TOKEN }}

      - name: Push image to C1 Dev Artifactory
        id: push-c1-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          C1_REGISTRY: ${{ secrets.C1_REGISTRY }}
          C1_REPOSITORY: ${{ secrets.C1_REPOSITORY }}
          DEV_CERT: ${{ secrets.SAML_CERT }}
          TEST_CERT: ${{ secrets.C1_TEST_SAML_CERT }}
          PROD_CERT: ${{ secrets.C1_PROD_SAML_CERT }}
        run: |
          docker push $C1_REGISTRY/$C1_REPOSITORY:$IMAGE_TAG
          echo "image=$C1_REGISTRY/$C1_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
