name: Docker Build Cache Push AWS ECR

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md**'
    branches: [main]

jobs:
  build-and-push-dev-aws:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3
      - name: Get tag
        run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef # v2
        with:
          aws-access-key-id: ${{ secrets.GHA_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GHA_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.GHA_ECR_ROLE_ASSUMPTION }}
          role-skip-session-tagging: true
          role-duration-seconds: '3600'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@2f9f10ea3fa2eed41ac443fee8bfbd059af2d0a4 # v1

      - name: Login to ECR
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e # v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.ECR_REGISTRY }}/docker-build-cache 
          tags: |
            type=sha,prefix=,format=long
          flavor: |
            latest=false
          
      - name: Docker setup buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2
        id: buildx
        with:
          install: true

      - name: Build and push builder stage
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/docker-build-cache:portal-client-builder
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=inline
          target: builder
          build-args: |
            BUILD=${{ github.sha }}
            
      - name: Build and push e2e stage
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/docker-build-cache:portal-client-e2e
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=inline
          target: e2e
          build-args: |
            BUILD=${{ github.sha }}
