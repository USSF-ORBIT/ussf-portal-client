name: Deploy Storybook to Github Pages

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md**'
    branches: [ main ]
  workflow_dispatch:


jobs:
  deploy-storybook:
    runs-on: ubuntu-latest
    name: Deploy Storybook
    environment:
      name: github-pages
      url: ${{ steps.build-publish.outputs.page_url }}
    steps:
      - name: Check out repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3

      - name: Read Node.js version from package.json
        run: echo "nodeVersion=$(node -p "require('./package.json').engines.node")" >> $GITHUB_OUTPUT
        id: engines

      - name: Set up node
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3
        with:
          node-version: ${{ steps.engines.outputs.nodeVersion }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ steps.yarn-cache-dir-path.outputs.dir }}

      # The yarn cache is not node_modules
      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Generate GraphQL types
        run: yarn generate

      - name: Build Storybook
        run: yarn storybook:build

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@a1ea191d508feb8485aceba848389d49f80ca2dc # v4
        with:
          clean: true
          clean-exclude: |
            CNAME
          folder: storybook-static # The folder the action should deploy.
