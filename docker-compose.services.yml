version: '3.8'

services:
  # Shared between CMS and Portal
  redis:
    container_name: portal_redis
    image: redis:6.2
    restart: always
    ports:
      - '6379:6379'

  personnel-api:
    container_name: personnel-api
    build:
      # Uncomment the below line to work with local check out
      # context: ../ussf-personnel-api/
      context: https://github.com/USSF-ORBIT/ussf-personnel-api.git#main
      dockerfile: Dockerfile
      target: builder
    restart: always
    ports:
      - '4000:4000'

  # Portal-specific services
  mongo:
    container_name: mongo
    image: mongo:4.4.20
    restart: always
    environment:
      MONGO_INITDB_DATABASE: dev
    volumes:
      - portal_data:/data/db
    ports:
      - '27017:27017'

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    restart: always
    ports:
      - '8888:8081'
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD
    depends_on:
      - mongo

  test-jwt-issuer:
    container_name: test-jwt-issuer
    build:
    # Uncomment the below line to work with local check out
      context: ../ussf-portal/test-jwt-service/
      dockerfile: Dockerfile
      target: builder
    restart: always
    ports:
      - '5001:5001'

  idp:
    container_name: test-saml-idp
    image: kristophjunge/test-saml-idp
    restart: always
    ports:
      - '8080:8080'
    env_file:
     # If testing locally with Mobile Connect, set the following
     # environment variables in your .envrc.local file:
     # EDIPI, COMMON_NAME, GIVENNAME, SURNAME
     - .envrc.local
    environment:
      SIMPLESAMLPHP_SP_ENTITY_ID: ussf-portal-client
      SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE: http://localhost:3000/api/auth/login
      SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE: http://localhost:3000/api/auth/logout/callback
    platform: linux/amd64
    volumes:
      - ./users.php:/var/www/simplesamlphp/config/authsources.php
  mariadb:
    image: docker.io/bitnami/mariadb:10.11
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MARIADB_USER=bn_matomo
      - MARIADB_DATABASE=bitnami_matomo
      # Flag necessary for the database max allowed packet check
      # https://matomo.org/faq/troubleshooting/faq_183/
      - MARIADB_EXTRA_FLAGS=--max_allowed_packet=64MB
    volumes:
      - 'mariadb_data:/bitnami/mariadb'

  matomo:
    build:
      # Uncomment the below line and comment out the line below that if you want to use the local Dockerfile
      # context: ../analytics/
      context: https://github.com/USSF-ORBIT/analytics.git#main
      dockerfile: Dockerfile
    ports:
      - '8443:8443'
      - '8081:8080'
    environment:
      - MATOMO_DATABASE_HOST=mariadb
      - MATOMO_DATABASE_PORT_NUMBER=3306
      - MATOMO_DATABASE_USER=bn_matomo
      - MATOMO_DATABASE_NAME=bitnami_matomo
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - MATOMO_WEBSITE_NAME=portal
      - MATOMO_WEBSITE_HOST=http://localhost:3000
      # - BITNAMI_DEBUG=true
    volumes:
      - 'matomo_data:/bitnami/matomo'
    depends_on:
      - mariadb
    platform: linux/amd64

  # CMS-specific services
  keystone-db:
    container_name: keystone-db
    image: postgres:14
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - cms_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=keystonecms
      - POSTGRES_USER=keystone
      - POSTGRES_DB=keystone

  wiremock:
    container_name: wiremock
    image: wiremock/wiremock:3.3.1-2
    ports:
      - '8181:8181'
    entrypoint:
      [
        '/docker-entrypoint.sh',
        '--global-response-templating',
        '--disable-gzip',
        '--verbose',
        '--port=8181',
        '--enable-stub-cors'
      ]
    volumes:
      - './mappings:/home/wiremock/mappings'

volumes:
  portal_data:
  cms_data:
  mariadb_data:
    driver: local
  matomo_data:
    driver: local
