"use strict";(self.webpackChunkussf_portal=self.webpackChunkussf_portal||[]).push([[1387],{"./src/stories/grid.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{USSFDSGrid:function(){return USSFDSGrid},USWDSGrid:function(){return USWDSGrid}});var _home_runner_work_ussf_portal_client_ussf_portal_client_node_modules_storybook_nextjs_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/nextjs/node_modules/@babel/runtime/helpers/esm/defineProperty.js"),react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@trussworks/react-uswds/lib/index.js"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){(0,_home_runner_work_ussf_portal_client_ussf_portal_client_node_modules_storybook_nextjs_node_modules_babel_runtime_helpers_esm_defineProperty_js__WEBPACK_IMPORTED_MODULE_1__.Z)(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}__webpack_exports__.default={title:"Global/Grid",parameters:{layout:"fullscreen"}};const testContent=__jsx("div",{style:{padding:"1rem",minHeight:150,backgroundColor:"#e1e7f1"}},"Â "),USSFDSGrid=()=>__jsx("div",{className:"sfds"},__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.GridContainer,null,__jsx("h1",null,"Condensed"),__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.Grid,{row:!0,gap:!0},Array.from({length:12},((x,i)=>__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.Grid,{key:`gridCol_${i}`,col:3,mobile:{col:3},tabletLg:{col:2},desktopLg:{col:1}},testContent))))),__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.GridContainer,{className:"grid-container--spacious"},__jsx("h1",null,"Spacious"),__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.Grid,{row:!0,gap:!0},Array.from({length:12},((x,i)=>__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.Grid,{key:`gridCol_${i}`,col:3,mobile:{col:3},tabletLg:{col:2},desktopLg:{col:1}},testContent))))));USSFDSGrid.displayName="USSFDSGrid";const USWDSGrid=()=>__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.GridContainer,null,__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.Grid,{row:!0,gap:!0},Array.from({length:12},((x,i)=>__jsx(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_2__.Grid,{key:`gridCol_${i}`,col:3,mobile:{col:3},tabletLg:{col:2},desktopLg:{col:1}},testContent)))));USWDSGrid.displayName="USWDSGrid",USSFDSGrid.parameters=_objectSpread(_objectSpread({},USSFDSGrid.parameters),{},{docs:_objectSpread(_objectSpread({},USSFDSGrid.parameters?.docs),{},{source:_objectSpread({originalSource:'(): React.ReactElement => <div className="sfds">\n    <GridContainer>\n      <h1>Condensed</h1>\n\n      <Grid row gap>\n        {Array.from({\n        length: 12\n      }, (x, i) => <Grid key={`gridCol_${i}`} col={3} mobile={{\n        col: 3\n      }} tabletLg={{\n        col: 2\n      }} desktopLg={{\n        col: 1\n      }}>\n            {testContent}\n          </Grid>)}\n      </Grid>\n    </GridContainer>\n\n    <GridContainer className="grid-container--spacious">\n      <h1>Spacious</h1>\n\n      <Grid row gap>\n        {Array.from({\n        length: 12\n      }, (x, i) => <Grid key={`gridCol_${i}`} col={3} mobile={{\n        col: 3\n      }} tabletLg={{\n        col: 2\n      }} desktopLg={{\n        col: 1\n      }}>\n            {testContent}\n          </Grid>)}\n      </Grid>\n    </GridContainer>\n  </div>'},USSFDSGrid.parameters?.docs?.source)})}),USWDSGrid.parameters=_objectSpread(_objectSpread({},USWDSGrid.parameters),{},{docs:_objectSpread(_objectSpread({},USWDSGrid.parameters?.docs),{},{source:_objectSpread({originalSource:"(): React.ReactElement => <GridContainer>\n    <Grid row gap>\n      {Array.from({\n      length: 12\n    }, (x, i) => <Grid key={`gridCol_${i}`} col={3} mobile={{\n      col: 3\n    }} tabletLg={{\n      col: 2\n    }} desktopLg={{\n      col: 1\n    }}>\n          {testContent}\n        </Grid>)}\n    </Grid>\n  </GridContainer>"},USWDSGrid.parameters?.docs?.source)})}),USSFDSGrid.__docgenInfo={description:"",methods:[],displayName:"USSFDSGrid"},USWDSGrid.__docgenInfo={description:"",methods:[],displayName:"USWDSGrid"}}}]);